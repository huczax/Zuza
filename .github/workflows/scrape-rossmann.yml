name: scrape-rossmann

on:
  workflow_dispatch:
  schedule:
    # 04:30 UTC = 06:30 PL latem, 05:30 zimą
    - cron: '30 4 * * *'

jobs:
  scrape:
    runs-on: ubuntu-latest

    container:
      image: mcr.microsoft.com/playwright/python:v1.54.0-jammy

    # używaj bash we wszystkich krokach
    defaults:
      run:
        shell: bash

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Upgrade pip + install deps"
        run: |
          python -m pip install --upgrade pip setuptools wheel
          if [ -f requirements.txt ]; then
            # pinujemy do 1.54.0 (zgodnie z obrazem)
            if grep -qE '^playwright' requirements.txt; then
              sed -i 's/^playwright.*/playwright==1.54.0/' requirements.txt
            else
              echo 'playwright==1.54.0' >> requirements.txt
            fi
            pip install -r requirements.txt
          fi

      - name: "Sanity check Playwright"
        env:
          PYTHONUNBUFFERED: "1"
        run: |
          python - <<'PY'
          import asyncio
          from scraper.browser import browser_context
          from scraper.utils import safe_goto, network_settle
          async def t():
              async with browser_context(profile="desktop", headless=True) as ctx:
                  p = await ctx.new_page()
                  await safe_goto(p, "https://example.com")
                  await network_settle(p, 500)
                  print("TITLE:", await p.title())
          asyncio.run(t())
          PY

      - name: "Smoke-test: zapisz screenshot do data/"
        env:
          PYTHONUNBUFFERED: "1"
        run: |
          python - <<'PY'
          import asyncio, os, datetime
          from scraper.browser import browser_context
          async def main():
              today = datetime.date.today().isoformat()
              out_dir = f"data/rossmann/{today}/images"
              os.makedirs(out_dir, exist_ok=True)
              async with browser_context(profile="desktop", headless=True) as ctx:
                  p = await ctx.new_page()
                  await p.goto("https://www.rossmann.pl", wait_until="domcontentloaded")
                  path = f"{out_dir}/smoke.png"
                  await p.screenshot(path=path, full_page=True)
                  print("Saved:", path, "size:", os.path.getsize(path), "bytes")
          asyncio.run(main())
          PY

      - name: "Run scraper (debug) + list outputs"
        env:
          LOGURU_LEVEL: DEBUG
          PYTHONUNBUFFERED: "1"
        run: |
          set -euo pipefail
          python -m scraper.runner --site rossmann --profiles desktop,mobile --headless true --save-snapshots true
          echo "--- DATA DIR ---"
          ls -R data || true
          echo "--- FILES FOUND ---"
          find . -type f | sort
          echo "--- HEALTH REPORT (if present) ---"
          if ls data/rossmann/*/health_report.json >/dev/null 2>&1; then
            sed -n '1,200p' data/rossmann/*/health_report.json
          fi

      - name: "Upload artifact (data/)"
        uses: actions/upload-artifact@v4
        with:
          name: data-${{ github.run_id }}
          path: data/**
          if-no-files-found: warn
